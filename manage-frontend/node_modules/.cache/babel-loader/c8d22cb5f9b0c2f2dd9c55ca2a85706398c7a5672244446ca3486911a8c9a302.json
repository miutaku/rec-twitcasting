{"ast":null,"code":"// filepath: src/services/api.ts\nimport axios from 'axios';\nconst API_BASE_URL = 'http://manage-backend-rec-twitcasting:8888';\nexport const fetchCastingUsers = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/list-casting-users`);\n    return response.data;\n  } catch (error) {\n    var _response, _response$data;\n    return {\n      error: ((_response = error.response) === null || _response === void 0 ? void 0 : (_response$data = _response.data) === null || _response$data === void 0 ? void 0 : _response$data.error) || 'An error occurred'\n    };\n  }\n};\nexport const addCastingUser = async username => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/add-casting-user`, {\n      params: {\n        username\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return {\n      error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred'\n    };\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchCastingUsers","response","get","data","error","_response","_response$data","addCastingUser","username","params","_error$response","_error$response$data"],"sources":["/Users/miutaku/work/git/rec-twitcasting/manage-frontend/src/services/api.ts"],"sourcesContent":["// filepath: src/services/api.ts\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://manage-backend-rec-twitcasting:8888';\n\nexport const fetchCastingUsers = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/list-casting-users`);\n        return response.data;\n    } catch (error) {\n        return { error: (error as any).response?.data?.error || 'An error occurred' };\n    }\n};\n\nexport const addCastingUser = async (username: string) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/add-casting-user`, {\n            params: { username }\n        });\n        return response.data;\n    } catch (error: any) {\n        return { error: error.response?.data?.error || 'An error occurred' };\n    }\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,4CAA4C;AAEjE,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,qBAAqB,CAAC;IACtE,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,SAAA,EAAAC,cAAA;IACZ,OAAO;MAAEF,KAAK,EAAE,EAAAC,SAAA,GAACD,KAAK,CAASH,QAAQ,cAAAI,SAAA,wBAAAC,cAAA,GAAvBD,SAAA,CAAyBF,IAAI,cAAAG,cAAA,uBAA7BA,cAAA,CAA+BF,KAAK,KAAI;IAAoB,CAAC;EACjF;AACJ,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAOC,QAAgB,IAAK;EACtD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,mBAAmB,EAAE;MACjEU,MAAM,EAAE;QAAED;MAAS;IACvB,CAAC,CAAC;IACF,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAU,EAAE;IAAA,IAAAM,eAAA,EAAAC,oBAAA;IACjB,OAAO;MAAEP,KAAK,EAAE,EAAAM,eAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,uBAApBA,oBAAA,CAAsBP,KAAK,KAAI;IAAoB,CAAC;EACxE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}